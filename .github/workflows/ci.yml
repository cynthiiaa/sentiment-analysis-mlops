name: CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/*.txt') }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Check black version
        run: black --version

      - name: Run linting
        run: |
          flake8 src/ --max-line-length=100
          black --check src/ --line-length=100
          isort --check-only src/

      - name: Run type checking
        run: mypy src/ --ignore-missing-imports

      - name: Run tests
        run: |
          export PYTHONPATH="${PYTHONPATH}:${GITHUB_WORKSPACE}"
          pytest tests/ -v --cov=src --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false  # Don't fail if token is not set
        continue-on-error: true  # Allow workflow to continue even if codecov fails

  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install safety
        run: pip install safety

      - name: Run security scan
        run: safety check --json

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
